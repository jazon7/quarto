---
title: "How to Make Publication-Ready Tables in R Using Flextable"
author: "Jason Gavrilis"
editor: source
execute: 
  echo: false
  output: true
  warning: false
  cache: true
prefer-html: true
format:
  html:
    theme: litera
    toc: true
    toc-location: left
    number-sections: false
    number-depth: 2
    code-fold: show
    fig-dpi: 600
    fig-align: center
    fig-height: 7
    fig-width: 9
    highlight-style: espresso
    embed-resources: true
bibliography: references.bib
---

Here is how you can create a presentation-ready table[^1] in R with the `flextable` package.

[^1]: Inspiration for the table shown in this tutorial came from [ArData](https://www.ardata.fr/en/flextable-gallery/2021-03-26-tennis-players/)

## Prerequisites

Key R functions and packages:

-   `flextable()` to print the tables. Requires the `flextable` package.

-   The `officer` package to help embed the tables into Microsoft Word and Powerpoint.

-   The `webshot` package to render tables as graphic files (e.g. png).

-   The `tidyverse` package for data manipulation and piping.

Load required packages.

```{r warning=FALSE, echo=TRUE}
library(pacman)
pacman::p_load(tidyverse,flextable, officer, webshot)
```

## Create a Simple Table

### Top 10 Fastest Production Cars

Retrieve a list of the top 10 fastest production cars by acceleration and import as a data frame named `cars`:

```{r echo=TRUE}
if(!file.exists("data")){
  dir.create(file.path("data"))
}
download.file("https://raw.githubusercontent.com/jazon7/fastest_cars/main/fastest_cars.csv", 
              destfile = "data/fastest_cars.csv")

cars <- read.csv("data/fastest_cars.csv",
                 check.names=FALSE) %>%
  as_tibble() %>% 
  filter(Rank <= 10)
cars
```

Then pass the `cars` data frame into the `flextable()` function:

```{r echo=TRUE}
#pass data to flextable function
ft <- flextable(cars)
ft
```

Ok. Not a a bad start at all!

But let's make a few minor improvements to the alignment, cell formatting, and footnotes:

```{r echo=TRUE}
ft <-
  flextable(cars) %>% 
  theme_vanilla() %>% 
  align(align = "center", part = "all") %>%  
  align(align = "left", j = "Time", part = "all") %>% 
  colformat_num(
    big.mark = "", decimal.mark = ",",
    na_str = "na") %>% 
  autofit(add_w = .1, unit = "cm") %>% 
  footnote(., i = 1 , j = 6,
               value = as_paragraph("Time taken to reach 60 mph or 97 kmph"),
               ref_symbols = c("1"),
               part = "header")
ft
```

Ok. This looks pretty good and ready to publish.

Here are some options.

### Export As Image

Use the `save_as_image()` function to export the table in .png format:

```{r echo=TRUE, eval=TRUE, output = FALSE}
if(!file.exists("output")){
  dir.create(file.path("output"))
}
save_as_image(ft, path = "output/fast_cars_table_simple.png", 
              zoom = 4, 
              expand = 5)
```

### Export to Microsoft Word

Use the `save_as_docx()` function to export the table embedded in a Word document:

```{r echo=TRUE, eval=TRUE, output = FALSE}
save_as_docx(
  `Fast Cars` = ft,
  path = "output/fast_cars_table_simple.docx", 
  pr_section = prop_section(
  page_size = page_size(
    orient = "portrait",
    width = 12, height = 8
  ),
  type = "continuous",
  page_margins = page_mar()
)
)
```

### Export to Microsoft Powerpoint

Use the `save_as_pptx()` function to export the table embedded into Powerpoint:

```{r echo=TRUE, eval=TRUE, output = FALSE}
save_as_pptx(`Fast Cars` = ft, 
               path = "output/fast_cars_table_simple.pptx")
```

## Create an Elaborate Table with Images

We first need to modify our `cars` data frame:

```{r echo=FALSE}
logo <- c("tesla_logo.png",
          "ferrari_logo.png",
          "porsche_logo.png",
          "porsche_logo.png",
          "lambo_logo.png",
          "bugatti_logo.png",
           "tesla_logo.png",
           "tesla_logo.png",
           "bugatti_logo.png",
          "porsche_logo.png")

model <-c("model_s_plaid.png",
          "sf_90.png",
          "918_spyder.png",
          "911_turbo.png",
          "huracan.png", 
          "chiron.png",
          "model_s_p100d.png",
          "model_x_plaid.png",
          "chiron_sport.png",
          "taycan.png")

fuel <- c("ev.png",
          "hybrid.png",
          "hybrid.png",
          "ice.png",
          "ice.png",
          "ice.png",
          "ev.png",
          "ev.png",
          "ice.png",
          "ev.png")

cars <- cbind(cars, logo, model, fuel) 

cars <- cars %>% 
  mutate(
    logo = file.path("images/logo", logo),
    model = file.path("images/model", model),
    fuel = file.path("images/fuel", fuel)
  )

```

Then we pass the data frame to a the `flextable` function:

```{r echo=TRUE}
ft <- flextable(cars,
  col_keys = c("Rank",
               "logo",
               "Model", 
               "fuel",
               "Time"
  )
) %>% 
  colformat_num(
    big.mark = "", decimal.mark = ",",
    na_str = "na")
ft
```

Next we add the manufacturer logo images into the table:

```{r echo=TRUE}
ft <- compose(ft, 
    j = "logo",
    value = as_paragraph(
      as_image(src = logo, 
               width = 0.5, 
               height = 0.5)
    )
  ) %>%  
  set_header_labels(logo = "Make")

ft
```

Then we add the model images into the table:

```{r echo=TRUE}
ft <- compose(ft, 
    j = "Model",
    value = as_paragraph(
      as_image(src = model, width = 0.5, 
               height = 0.5, 
               guess_size = TRUE),
      " ", 
      as_chunk(x = Model)
    )
  )
ft
```

Then we add the propulsion images:

```{r echo=TRUE}
ft <- compose(ft, 
    j = "fuel",
    value = as_paragraph(
      as_image(src = fuel, 
               width = 0.5, 
               height = 0.5)
    )
  ) %>%  
  set_header_labels(fuel = "Propulsion")
ft
```

We then add some final formatting touches:

```{r echo=TRUE}
ft <- theme_vanilla(ft) %>% 
  align(align = "center", part = "all") %>%  
  align(align = "left", j = "Model", part = "all") %>%  
  autofit(add_w = .1, unit = "cm")

ft %>% 
   footnote(., i = 1 , j = 5,
               value = as_paragraph("Time taken to reach 60 mph or 97 kmph"),
               ref_symbols = c("1"),
               part = "header")
```

And we have a beautiful table ready to show off! ü•≥üëè

```{r eval=TRUE, output = FALSE, echo = FALSE}
# save as image zoom (defaults to a scale level of 2) 
# and expand (adds whitespace pixels around the 
# cropped table image, and has a default value of 5)
save_as_image(ft, path = "output/fast_cars.png", 
              zoom = 4, 
              expand = 5)

#save directly to word
save_as_docx(
  `Fast cars` = ft,
  path = "output/fast_cars.docx", 
  pr_section = prop_section(
  page_size = page_size(
    orient = "portrait",
    width = 12, height = 8
  ),
  type = "continuous",
  page_margins = page_mar()
)
)

#this exports but unfortunately images are not displayed.
#this is limitation of powerpoint. 
save_as_pptx(`Fast Cars` = ft, 
               path = "output/fast_cars.pptx")
```

# Resources

#### Flextable Package [@flextable]:

-   R documentation located at: [flextable package - RDocumentation](https://www.rdocumentation.org/packages/flextable/versions/0.7.0)

-   The help pages are in a bookdown located at: <https://ardata-fr.github.io/flextable-book/>

-   A gallery of examples is available here: <https://ardata.fr/en/flextable-gallery/>

#### Other R Table Packages:

-   [How to Make Beautiful Tables in R](https://rfortherestofus.com/2019/11/how-to-make-beautiful-tables-in-r/)
